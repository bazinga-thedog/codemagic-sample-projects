definitions:
  environment: &environment
    flutter: 3.27.3
    java: 17
  scripts:
    - &install_patrol_cli
      name: Install Patrol CLI
      script: dart pub global activate patrol_cli 3.6.0
    - &prepare_install_dependencies
      name: Install dependencies
      script: flutter pub get

workflows:
  patrol_android_build:
    name: Patrol Android Build
    instance_type: mac_mini_m2
    max_build_duration: 30

    environment:
      <<: *environment

    scripts:
      - *prepare_install_dependencies
      - *install_patrol_cli
      - name: Build apk for testing
        script: |
          patrol build android --verbose
          echo "APK_PATH=build/app/outputs/apk/dev/debug/app-dev-debug.apk" >> $CM_ENV
          echo "TEST_APK_PATH=build/app/outputs/apk/androidTest/dev/debug/app-dev-debug-androidTest.apk" >> $CM_ENV
      - name: Send tests to Firebase test lab
        script: |
          gcloud firebase test android run \
             --type instrumentation \
             --use-orchestrator \
             --app $APK_PATH \
             --test $TEST_APK_PATH \
             --num-flaky-test-attempts 1 \
             --timeout 25m \
             --device model=MediumPhone.arm,version=35,locale=en,orientation=portrait \
             --environment-variables clearPackageData=true
    artifacts:
      - build/app/outputs/apk/dev/debug/app-dev-debug.apk
      - build/app/outputs/apk/androidTest/dev/debug/app-dev-debug-androidTest.apk
  patrol_ios_build:
    name: Patrol iOS Build
    instance_type: mac_mini_m2
    max_build_duration: 30

    environment:
      <<: *environment
      # To run iOS tests, on physical iOS devices, you need to have a development and adhoc certificate.
      # For more information, see: https://patrol.leancode.co/documentation/physical-ios-devices-setup
      # You can upload these certificates in codemagic team settings, see: https://docs.codemagic.io/yaml-code-signing/signing-ios/
      ios_signing:
        provisioning_profiles:
          - patrol_development
          - patrol_adhoc
        certificates:
          - development_certificate
          - adhoc_certificate

    scripts:
      - *prepare_install_dependencies
      - *install_patrol_cli
      - name: Set APP ID
        script: |
          export APP_ID_SUFFIX=.dev 
          export APP_ID="pl.leancode.patrol.Example$APP_ID_SUFFIX"
          echo "APP_ID=$APP_ID" >> $CM_ENV
          echo "TEST_APP_ID_IOS=pl.leancode.patrol.Example" >> $CM_ENV
          echo "APP_ID set to: $APP_ID"
      # Alternative way to use fastlane instead of certificates in codemagic to sign the app.
      # - name: Fastlane iOS
      #   working_directory: ios
      #   script: |
      #     bundle install
      #     bundle exec fastlane ios ios_patrol
      - name: Patrol build
        script: |
          patrol build ios --clear-permissions --release --verbose
      - name: Zip iOS bundle
        working_directory: build/ios_integ/Build/Products
        script: |
          zip -r ios_bundle.zip .
      - name: Copy iOS bundle
        script: |
          cp build/ios_integ/Build/Products/ios_bundle.zip ios_bundle.zip
      - name: Send tests to Firebase test lab
        script: |
          gcloud firebase test ios run \
          --test=build/ios_integ/Build/Products/ios_bundle.zip \
          --device model=iphone14pro,version=16.6,locale=en,orientation=portrait \
          --type=xctest \
          --record-video \
          --timeout=35m \
          --client-details=matrixLabel="Physical iOS device"
    artifacts:
      - build/ios_integ/Build/Products/ios_bundle.zip
